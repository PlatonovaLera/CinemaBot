import telebot
from telebot import types
import csv
import random

# –°—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –≤ CSV-—Ñ–∞–π–ª–µ, –∑–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∞
line_count = sum(1 for line in open(r'C:\Users\–î–∞—à–∞\Desktop\2 –∫—É—Ä—Å\pythonProject\films –±–¥.csv', encoding='cp1251')) - 1

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Ñ–∏–ª—å–º–∞
def rand_film_name():
    rand_num_of_film = random.randint(1, line_count)
    with open(r'C:\Users\–î–∞—à–∞\Desktop\2 –∫—É—Ä—Å\pythonProject\films –±–¥.csv', newline='', encoding='cp1251') as csvfile:
        reader = csv.reader(csvfile, delimiter=';')
        next(reader)  # –ü—Ä–æ–ø—É—Å–∫ –∑–∞–≥–æ–ª–æ–≤–∫–∞
        for _ in range(rand_num_of_film):
            row = next(reader)  # –ß–∏—Ç–∞–µ–º —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–æ–∫—É
        return row[1]  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –≤—Ç–æ—Ä–æ–≥–æ —Å—Ç–æ–ª–±—Ü–∞

bot = telebot.TeleBot('6969036206:AAFrWpg8FYYCxUr8rTtOq_YmzajlM4n6WJU')

@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('–ü–æ–¥–±–æ—Ä–∫–∞ —Ñ–∏–ª—å–º–æ–≤')
    btn2 = types.KeyboardButton('–ü–æ–¥–±–æ—Ä–∫–∞ —Å–µ—Ä–∏–∞–ª–æ–≤')
    btn3 = types.KeyboardButton('–°–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º')
    btn4 = types.KeyboardButton('–°–ª—É—á–∞–π–Ω—ã–π —Å–µ—Ä–∏–∞–ª')
    markup.row(btn1, btn2)
    markup.row(btn3, btn4)
    bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.username}! –í—ã–±–µ—Ä–∏, —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å üëáüèª', reply_markup=markup)
    bot.register_next_step_handler(message, on_click)

def on_click(message):
    if message.text == '–ü–æ–¥–±–æ—Ä–∫–∞ —Ñ–∏–ª—å–º–æ–≤':
        filter_choice(message)
    elif message.text == '–ü–æ–¥–±–æ—Ä–∫–∞ —Å–µ—Ä–∏–∞–ª–æ–≤':
        bot.send_message(message.chat.id, '–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø–æ–¥–±–æ—Ä–∫—É —Å–µ—Ä–∏–∞–ª–æ–≤')
    elif message.text == '–°–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º':
        random_film = rand_film_name()
        bot.send_message(message.chat.id, f"–í–æ—Ç –≤–∞—à —Å–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º: {random_film}")
    elif message.text == '–°–ª—É—á–∞–π–Ω—ã–π —Å–µ—Ä–∏–∞–ª':
        bot.send_message(message.chat.id, '–í—ã –≤—ã–±—Ä–∞–ª–∏ —Å–ª—É—á–∞–π–Ω—ã–π —Å–µ—Ä–∏–∞–ª')
    else:
        bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω–æ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π.')
        start(message)

def filter_choice(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('–ì–æ–¥')
    btn2 = types.KeyboardButton('–í–æ–∑—Ä–∞—Å—Ç–Ω–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ')
    btn3 = types.KeyboardButton('–ñ–∞–Ω—Ä')
    btn4 = types.KeyboardButton('–†–µ–∂–∏—Å—Å–µ—Ä')
    btn5 = types.KeyboardButton('–°—Ç—Ä–∞–Ω–∞')
    btn6 = types.KeyboardButton('–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å')
    btn7 = types.KeyboardButton('–†–µ–π—Ç–∏–Ω–≥')
    btn8 = types.KeyboardButton('–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ')
    markup.row(btn1, btn2)
    markup.row(btn3, btn4)
    markup.row(btn5, btn6)
    markup.row(btn7, btn8)
    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏ –∫—Ä–∏—Ç–µ—Ä–∏–π, –∫–æ—Ç–æ—Ä—ã–π –≤–∞–∂–µ–Ω —Ç–µ–±–µ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Ñ–∏–ª—å–º–∞ üëáüèª', reply_markup=markup)
    bot.register_next_step_handler(message, on_click_filter)

def on_click_filter(message):
    if message.text == '–ì–æ–¥':
        markup_inline = types.InlineKeyboardMarkup()
        btn1 = types.InlineKeyboardButton('–¥–æ 1950', callback_data='year_1')
        btn2 = types.InlineKeyboardButton('1950 - 1969', callback_data='year_2')
        btn3 = types.InlineKeyboardButton('1970 - 1979', callback_data='year_3')
        btn4 = types.InlineKeyboardButton('1980 - 1989', callback_data='year_4')
        btn5 = types.InlineKeyboardButton('1990 - 1999', callback_data='year_5')
        btn6 = types.InlineKeyboardButton('2000 - 2004', callback_data='year_6')
        btn7 = types.InlineKeyboardButton('2005 - 2009', callback_data='year_7')
        btn8 = types.InlineKeyboardButton('2010 - 2014', callback_data='year_8')
        btn9 = types.InlineKeyboardButton('2015 - 2019', callback_data='year_9')
        btn10 = types.InlineKeyboardButton('2020 - 2024', callback_data='year_10')
        markup_inline.add(btn1, btn2, btn3, btn4, btn5, btn6, btn7, btn8, btn9, btn10)
        bot.send_message(message.chat.id, '–ö–∞–∫–æ–≥–æ –≥–æ–¥–∞ —Ñ–∏–ª—å–º —Ç—ã —Ö–æ—á–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å?', reply_markup=markup_inline)
    elif message.text == '–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å':
        markup_inline = types.InlineKeyboardMarkup()
        btn1 = types.InlineKeyboardButton('–º–µ–Ω—å—à–µ 1—á', callback_data='duration_1')
        btn2 = types.InlineKeyboardButton('–æ—Ç 1—á –¥–æ 1.5—á', callback_data='duration_2')
        btn3 = types.InlineKeyboardButton('–æ—Ç 1.5—á –¥–æ 2—á', callback_data='duration_3')
        btn4 = types.InlineKeyboardButton('–±–æ–ª—å—à–µ 2—á', callback_data='duration_4')
        markup_inline.add(btn1, btn2, btn3, btn4)
        bot.send_message(message.chat.id, '–ö–∞–∫–æ–π –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Ñ–∏–ª—å–º —Ç—ã —Ö–æ—á–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å?', reply_markup=markup_inline)
    elif message.text == '–°—Ç—Ä–∞–Ω–∞':
        markup_inline = types.InlineKeyboardMarkup()
        btn1 = types.InlineKeyboardButton('–†–æ—Å—Å–∏—è', callback_data='country_–†–æ—Å—Å–∏—è')
        btn2 = types.InlineKeyboardButton('–°–®–ê', callback_data='country_–°–®–ê')
        btn3 = types.InlineKeyboardButton('–í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏—è', callback_data='country_–í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏—è')
        btn4 = types.InlineKeyboardButton('–°–°–°–†', callback_data='country_–°–°–°–†')
        btn5 = types.InlineKeyboardButton('–§—Ä–∞–Ω—Ü–∏—è', callback_data='country_–§—Ä–∞–Ω—Ü–∏—è')
        btn6 = types.InlineKeyboardButton('–ì–µ—Ä–º–∞–Ω–∏—è', callback_data='country_–ì–µ—Ä–º–∞–Ω–∏—è')
        btn7 = types.InlineKeyboardButton('–Æ–∂–Ω–∞—è –ö–æ—Ä–µ—è', callback_data='country_–Æ–∂–Ω–∞—è –ö–æ—Ä–µ—è')
        btn8 = types.InlineKeyboardButton('–î–∞–Ω–∏—è', callback_data='country_–î–∞–Ω–∏—è')
        btn9 = types.InlineKeyboardButton('–ò—Å–ø–∞–Ω–∏—è', callback_data='country_–ò—Å–ø–∞–Ω–∏—è')
        markup_inline.add(btn1, btn2, btn3, btn4, btn5, btn6, btn7, btn8, btn9)
        bot.send_message(message.chat.id, '–ö–∞–∫–æ–π —Å—Ç—Ä–∞–Ω—ã —Ñ–∏–ª—å–º —Ç—ã —Ö–æ—á–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å?', reply_markup=markup_inline)
    elif message.text == '–†–µ–∂–∏—Å—Å–µ—Ä':
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ —Ñ–∞–º–∏–ª–∏—é —Ä–µ–∂–∏—Å—Å–µ—Ä–∞, —Ñ–∏–ª—å–º –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–µ–ª(-–∞) –±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å')
        bot.register_next_step_handler(message, on_click_director)
    elif message.text == '–í–æ–∑—Ä–∞—Å—Ç–Ω–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ':
        markup_inline = types.InlineKeyboardMarkup()
        btn1 = types.InlineKeyboardButton('0+', callback_data='limit_0+')
        btn2 = types.InlineKeyboardButton('6+', callback_data='limit_6+')
        btn3 = types.InlineKeyboardButton('12+', callback_data='limit_12+')
        btn4 = types.InlineKeyboardButton('16+', callback_data='limit_16+')
        btn5 = types.InlineKeyboardButton('18+', callback_data='limit_18+')
        markup_inline.add(btn1, btn2, btn3, btn4, btn5)
        bot.send_message(message.chat.id, '–§–∏–ª—å–º —Å –∫–∞–∫–∏–º –≤–æ–∑—Ä–∞—Å—Ç–Ω—ã–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ–º —Ç—ã —Ö–æ—á–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å?', reply_markup=markup_inline)
    elif message.text == '–†–µ–π—Ç–∏–Ω–≥':
        markup_inline = types.InlineKeyboardMarkup()
        btn1 = types.InlineKeyboardButton('–Ω–∏–∂–µ 3.0', callback_data='rating_1')
        btn2 = types.InlineKeyboardButton('3.0 - 4.9', callback_data='rating_2')
        btn3 = types.InlineKeyboardButton('5.0 - 6.9', callback_data='rating_3')
        btn4 = types.InlineKeyboardButton('7.0 - 7.9', callback_data='rating_4')
        btn5 = types.InlineKeyboardButton('8.0 - 8.9', callback_data='rating_5')
        btn6 = types.InlineKeyboardButton('9.0 - 10.0', callback_data='rating_6')
        markup_inline.add(btn1, btn2, btn3, btn4, btn5, btn6)
        bot.reply_to(message, '–ö–∞–∫–æ–π —Ä–µ–π—Ç–∏–Ω–≥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É —Ñ–∏–ª—å–º–∞?', reply_markup=markup_inline)
    else:
        bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤.')
        filter_choice(message)

@bot.callback_query_handler(func=lambda call: call.data.startswith('year_'))
def on_click_year(call):
    year_ranges = {
        'year_1': (0, 1949),
        'year_2': (1950, 1969),
        'year_3': (1970, 1979),
        'year_4': (1980, 1989),
        'year_5': (1990, 1999),
        'year_6': (2000, 2004),
        'year_7': (2005, 2009),
        'year_8': (2010, 2014),
        'year_9': (2015, 2019),
        'year_10': (2020, 2024),
    }
    year1, year2 = year_ranges[call.data]
    films = film_year(year1, year2)
    if films:
        bot.send_message(call.message.chat.id, "–í–æ—Ç —Ñ–∏–ª—å–º—ã –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥:\n" + "\n".join(films))
    else:
        bot.send_message(call.message.chat.id, "–§–∏–ª—å–º–æ–≤ –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")

def film_year(year1, year2):
    films = []
    with open(r'C:\Users\–î–∞—à–∞\Desktop\2 –∫—É—Ä—Å\pythonProject\films –±–¥.csv', newline='', encoding='cp1251') as csvfile:
        reader = csv.DictReader(csvfile, delimiter=';')
        for row in reader:
            try:
                year = int(row['film_year'])  # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ –≥–æ–¥ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å—Ç–æ–ª–±—Ü–µ 'film_year'
                if year1 <= year <= year2:
                    films.append(row['film_name'])  # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å—Ç–æ–ª–±—Ü–µ 'film_name'
            except ValueError:
                continue
    return films

@bot.callback_query_handler(func=lambda call: call.data.startswith('duration_'))
def on_click_duration(call):
    duration_ranges = {
        'duration_1': (0, 59),
        'duration_2': (60, 89),
        'duration_3': (90, 119),
        'duration_4': (120, 500),
    }
    dur1, dur2 = duration_ranges[call.data]
    films = film_duration(dur1, dur2)
    if films:
        bot.send_message(call.message.chat.id, "–í–æ—Ç —Ñ–∏–ª—å–º—ã —Å –≤—ã–±—Ä–∞–Ω–Ω–æ–π –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é:\n" + "\n".join(films))
    else:
        bot.send_message(call.message.chat.id, "–§–∏–ª—å–º–æ–≤ —Å –≤—ã–±—Ä–∞–Ω–Ω–æ–π –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")

def film_duration(dur1, dur2):
    films = []
    with open(r'C:\Users\–î–∞—à–∞\Desktop\2 –∫—É—Ä—Å\pythonProject\films –±–¥.csv', newline='', encoding='cp1251') as csvfile:
        reader = csv.DictReader(csvfile, delimiter=';')
        for row in reader:
            try:
                duration = int(row['duration'])
                if dur1 <= duration <= dur2:
                    films.append(row['film_name'])
            except ValueError:
                continue
    return films

@bot.callback_query_handler(func=lambda call: call.data.startswith('country_'))
def on_click_country(call):
    country = call.data.split('_')[1]
    films = film_country(country)
    if films:
        bot.send_message(call.message.chat.id, "–í–æ—Ç —Ñ–∏–ª—å–º—ã —Å –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω–æ–π:\n" + "\n".join(films))
    else:
        bot.send_message(call.message.chat.id, "–§–∏–ª—å–º–æ–≤ —Å –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω–æ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")

def film_country(country):
    country_id = None
    films = []
    with open(r'C:\Users\–î–∞—à–∞\Desktop\2 –∫—É—Ä—Å\pythonProject\films_country –±–¥.csv', newline='', encoding='cp1251') as csvfile:
        reader = csv.DictReader(csvfile, delimiter=';')
        for row in reader:
            if row['country_name'] == country:
                country_id = int(row['id'])
                break
    if country_id is not None:
        with open(r'C:\Users\–î–∞—à–∞\Desktop\2 –∫—É—Ä—Å\pythonProject\films –±–¥.csv', newline='', encoding='cp1251') as films_file:
            films_reader = csv.DictReader(films_file, delimiter=';')
            for film_row in films_reader:
                if int(film_row['id_country']) == country_id:
                    films.append(film_row['film_name'])
    return films

def on_click_director(message):
    director = message.text
    films = film_director(director)
    if films:
        bot.send_message(message.chat.id, "–í–æ—Ç —Ñ–∏–ª—å–º—ã, —Å–Ω—è—Ç—ã–µ —ç—Ç–∏–º —Ä–µ–∂–∏—Å—Å–µ—Ä–æ–º:\n" + "\n".join(films))
    else:
        bot.send_message(message.chat.id, "–§–∏–ª—å–º–æ–≤, —Å–Ω—è—Ç—ã—Ö —Ä–µ–∂–∏—Å—Å–µ—Ä–æ–º —Å —Ç–∞–∫–æ–π —Ñ–∞–º–∏–ª–∏–µ–π, –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")

def film_director(director):
    director_id = None
    films = []
    with open(r'C:\Users\–î–∞—à–∞\Desktop\2 –∫—É—Ä—Å\pythonProject\director –±–¥.csv', newline='', encoding='cp1251') as csvfile:
        reader = csv.DictReader(csvfile, delimiter=';')
        for row in reader:
            if row['director_surname'].lower() == director.lower():
                director_id = int(row['id'])
                break
    if director_id is not None:
        with open(r'C:\Users\–î–∞—à–∞\Desktop\2 –∫—É—Ä—Å\pythonProject\films –±–¥.csv', newline='', encoding='cp1251') as films_file:
            films_reader = csv.DictReader(films_file, delimiter=';')
            for films_row in films_reader:
                if int(films_row['id_director']) == director_id:
                    films.append(films_row['film_name'])
    return films

@bot.callback_query_handler(func=lambda call: call.data.startswith('limit_'))
def on_click_age_limit(call):
    age_limit = call.data.split('_')[1]
    films = film_age_limit(age_limit)
    if films:
        bot.send_message(call.message.chat.id, "–í–æ—Ç —Ñ–∏–ª—å–º—ã —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º –≤–æ–∑—Ä–∞—Å—Ç–Ω—ã–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ–º:\n" + "\n".join(films))
    else:
        bot.send_message(call.message.chat.id, "–§–∏–ª—å–º–æ–≤ —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º –≤–æ–∑—Ä–∞—Ç–Ω—ã–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")

def film_age_limit(age_limit):
    age_limit_id = None
    films = []
    with open(r'C:\Users\–î–∞—à–∞\Desktop\2 –∫—É—Ä—Å\pythonProject\age_limit –±–¥.csv', newline='', encoding='cp1251') as csvfile:
        reader = csv.DictReader(csvfile, delimiter=';')
        for row in reader:
            if row['limit'] == age_limit:
                age_limit_id = int(row['id'])
                break
    if age_limit_id is not None:
        with open(r'C:\Users\–î–∞—à–∞\Desktop\2 –∫—É—Ä—Å\pythonProject\films –±–¥.csv', newline='', encoding='cp1251') as films_file:
            films_reader = csv.DictReader(films_file, delimiter=';')
            for film_row in films_reader:
                if int(film_row['id_age_limit']) == age_limit_id:
                    films.append(film_row['film_name'])
    return films

@bot.callback_query_handler(func=lambda call: call.data.startswith('rating_'))
def on_click_rating(call):
    rating_ranges = {
        'rating_1': (0, 2.9),
        'rating_2': (3.0, 4.9),
        'rating_3': (5.0, 6.9),
        'rating_4': (7.0, 7.9),
        'rating_5': (8.0, 8.9),
        'rating_6': (9.0, 10.0),
    }
    rating1, rating2 = rating_ranges[call.data]
    films = film_rating(rating1, rating2)
    if films:
        bot.send_message(call.message.chat.id, "–í–æ—Ç —Ñ–∏–ª—å–º—ã —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º —Ä–µ–π—Ç–∏–Ω–≥–æ–º:\n" + "\n".join(films))
    else:
        bot.send_message(call.message.chat.id, "–§–∏–ª—å–º–æ–≤ —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º —Ä–µ–π—Ç–∏–Ω–≥–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")

def film_rating(rating1, rating2):
    films = []
    with open(r'C:\Users\–î–∞—à–∞\Desktop\2 –∫—É—Ä—Å\pythonProject\films –±–¥.csv', newline='', encoding='cp1251') as csvfile:
        reader = csv.DictReader(csvfile, delimiter=';')
        for row in reader:
            try:
                rating = int(row['rating'])
                if rating1 <= rating <= rating2:
                    films.append(row['film_name'])
            except ValueError:
                continue
    return films

bot.polling(none_stop=True)
