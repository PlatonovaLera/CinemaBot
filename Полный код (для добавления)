import telebot
from telebot import types
import csv
import random

# –°—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –≤ CSV-—Ñ–∞–π–ª–µ, –∑–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∞
line_count = sum(1 for line in open(r'C:\Users\–î–∞—à–∞\Desktop\2 –∫—É—Ä—Å\pythonProject\films –±–¥.csv', encoding='cp1251')) - 1

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Ñ–∏–ª—å–º–∞
def rand_film_name():
    rand_num_of_film = random.randint(1, line_count)
    with open(r'C:\Users\–î–∞—à–∞\Desktop\2 –∫—É—Ä—Å\pythonProject\films –±–¥.csv', newline='', encoding='cp1251') as csvfile:
        reader = csv.reader(csvfile, delimiter=';')
        next(reader)  # –ü—Ä–æ–ø—É—Å–∫ –∑–∞–≥–æ–ª–æ–≤–∫–∞
        for _ in range(rand_num_of_film):
            row = next(reader)  # –ß–∏—Ç–∞–µ–º —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–æ–∫—É
        return row[1]  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –≤—Ç–æ—Ä–æ–≥–æ —Å—Ç–æ–ª–±—Ü–∞

bot = telebot.TeleBot('6969036206:AAFrWpg8FYYCxUr8rTtOq_YmzajlM4n6WJU')

@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('–ü–æ–¥–±–æ—Ä–∫–∞ —Ñ–∏–ª—å–º–æ–≤')
    btn2 = types.KeyboardButton('–ü–æ–¥–±–æ—Ä–∫–∞ —Å–µ—Ä–∏–∞–ª–æ–≤')
    btn3 = types.KeyboardButton('–°–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º')
    btn4 = types.KeyboardButton('–°–ª—É—á–∞–π–Ω—ã–π —Å–µ—Ä–∏–∞–ª')
    markup.row(btn1, btn2)
    markup.row(btn3, btn4)
    bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.username}! –í—ã–±–µ—Ä–∏, —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å üëáüèª', reply_markup=markup)
    bot.register_next_step_handler(message, on_click)

def on_click(message):
    if message.text == '–ü–æ–¥–±–æ—Ä–∫–∞ —Ñ–∏–ª—å–º–æ–≤':
        filter_choice(message)
    elif message.text == '–ü–æ–¥–±–æ—Ä–∫–∞ —Å–µ—Ä–∏–∞–ª–æ–≤':
        bot.send_message(message.chat.id, '–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø–æ–¥–±–æ—Ä–∫—É —Å–µ—Ä–∏–∞–ª–æ–≤')
    elif message.text == '–°–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º':
        random_film = rand_film_name()
        bot.send_message(message.chat.id, f"–í–æ—Ç –≤–∞—à —Å–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º: {random_film}")
    elif message.text == '–°–ª—É—á–∞–π–Ω—ã–π —Å–µ—Ä–∏–∞–ª':
        bot.send_message(message.chat.id, '–í—ã –≤—ã–±—Ä–∞–ª–∏ —Å–ª—É—á–∞–π–Ω—ã–π —Å–µ—Ä–∏–∞–ª')
    else:
        bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω–æ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π.')
        start(message)

def filter_choice(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('–ì–æ–¥')
    btn2 = types.KeyboardButton('–í–æ–∑—Ä–∞—Å—Ç–Ω–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ')
    btn3 = types.KeyboardButton('–ñ–∞–Ω—Ä')
    btn4 = types.KeyboardButton('–†–µ–∂–∏—Å—Å–µ—Ä')
    btn5 = types.KeyboardButton('–°—Ç—Ä–∞–Ω–∞')
    btn6 = types.KeyboardButton('–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å')
    btn7 = types.KeyboardButton('–†–µ–π—Ç–∏–Ω–≥')
    btn8 = types.KeyboardButton('–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ')
    markup.row(btn1, btn2)
    markup.row(btn3, btn4)
    markup.row(btn5, btn6)
    markup.row(btn7, btn8)
    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏ –∫—Ä–∏—Ç–µ—Ä–∏–π, –∫–æ—Ç–æ—Ä—ã–π –≤–∞–∂–µ–Ω —Ç–µ–±–µ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Ñ–∏–ª—å–º–∞ üëáüèª', reply_markup=markup)
    bot.register_next_step_handler(message, on_click_filter)

def on_click_filter(message):
    if message.text == '–ì–æ–¥':
        markup_inline = types.InlineKeyboardMarkup()
        btn1 = types.InlineKeyboardButton('–¥–æ 1950', callback_data='year_1')
        btn2 = types.InlineKeyboardButton('1950 - 1969', callback_data='year_2')
        btn3 = types.InlineKeyboardButton('1970 - 1979', callback_data='year_3')
        btn4 = types.InlineKeyboardButton('1980 - 1989', callback_data='year_4')
        btn5 = types.InlineKeyboardButton('1990 - 1999', callback_data='year_5')
        btn6 = types.InlineKeyboardButton('2000 - 2004', callback_data='year_6')
        btn7 = types.InlineKeyboardButton('2005 - 2009', callback_data='year_7')
        btn8 = types.InlineKeyboardButton('2010 - 2014', callback_data='year_8')
        btn9 = types.InlineKeyboardButton('2015 - 2019', callback_data='year_9')
        btn10 = types.InlineKeyboardButton('2020 - 2024', callback_data='year_10')
        markup_inline.add(btn1, btn2, btn3, btn4, btn5, btn6, btn7, btn8, btn9, btn10)
        bot.send_message(message.chat.id, '–ö–∞–∫–æ–≥–æ –≥–æ–¥–∞ —Ñ–∏–ª—å–º —Ç—ã —Ö–æ—á–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å?', reply_markup=markup_inline)
    elif message.text == '–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å':
        markup_inline = types.InlineKeyboardMarkup()
        btn1 = types.InlineKeyboardButton('–º–µ–Ω—å—à–µ 1—á', callback_data='duration_1')
        btn2 = types.InlineKeyboardButton('–æ—Ç 1—á –¥–æ 1.5—á', callback_data='duration_2')
        btn3 = types.InlineKeyboardButton('–æ—Ç 1.5—á –¥–æ 2—á', callback_data='duration_3')
        btn4 = types.InlineKeyboardButton('–±–æ–ª—å—à–µ 2—á', callback_data='duration_4')
        markup_inline.add(btn1, btn2, btn3, btn4)
        bot.send_message(message.chat.id, '–ö–∞–∫–æ–π –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Ñ–∏–ª—å–º —Ç—ã —Ö–æ—á–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å?', reply_markup=markup_inline)
    else:
        bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤.')
        filter_choice(message)

@bot.callback_query_handler(func=lambda call: call.data.startswith('year_'))
def on_click_year(call):
    year_ranges = {
        'year_1': (0, 1949),
        'year_2': (1950, 1969),
        'year_3': (1970, 1979),
        'year_4': (1980, 1989),
        'year_5': (1990, 1999),
        'year_6': (2000, 2004),
        'year_7': (2005, 2009),
        'year_8': (2010, 2014),
        'year_9': (2015, 2019),
        'year_10': (2020, 2024),
    }
    year1, year2 = year_ranges[call.data]
    films = film_year(year1, year2)
    if films:
        bot.send_message(call.message.chat.id, "–í–æ—Ç —Ñ–∏–ª—å–º—ã –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥:\n" + "\n".join(films))
    else:
        bot.send_message(call.message.chat.id, "–§–∏–ª—å–º–æ–≤ –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")

def film_year(year1, year2):
    films = []
    with open(r'C:\Users\–î–∞—à–∞\Desktop\2 –∫—É—Ä—Å\pythonProject\films –±–¥.csv', newline='', encoding='cp1251') as csvfile:
        reader = csv.DictReader(csvfile, delimiter=';')
        for row in reader:
            try:
                year = int(row['film_year'])  # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ –≥–æ–¥ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å—Ç–æ–ª–±—Ü–µ 'film_year'
                if year1 <= year <= year2:
                    films.append(row['film_name'])  # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å—Ç–æ–ª–±—Ü–µ 'film_name'
            except ValueError:
                continue
    return films

@bot.callback_query_handler(func=lambda call: call.data.startswith('duration_'))
def on_click_duration(call):
    duration_ranges = {
        'duration_1': (0, 59),
        'duration_2': (60, 89),
        'duration_3': (90, 119),
        'duration_4': (120, 500),
    }
    dur1, dur2 = duration_ranges[call.data]
    films = film_duration(dur1, dur2)
    if films:
        bot.send_message(call.message.chat.id, "–í–æ—Ç —Ñ–∏–ª—å–º—ã —Å –≤—ã–±—Ä–∞–Ω–Ω–æ–π –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é:\n" + "\n".join(films))
    else:
        bot.send_message(call.message.chat.id, "–§–∏–ª—å–º–æ–≤ —Å –≤—ã–±—Ä–∞–Ω–Ω–æ–π –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")

def film_duration(dur1, dur2):
    films = []
    with open(r'C:\Users\–î–∞—à–∞\Desktop\2 –∫—É—Ä—Å\pythonProject\films –±–¥.csv', newline='', encoding='cp1251') as csvfile:
        reader = csv.DictReader(csvfile, delimiter=';')
        for row in reader:
            try:
                duration = int(row['duration'])
                if dur1 <= duration <= dur2:
                    films.append(row['film_name'])
            except ValueError:
                continue
    return films

bot.polling(none_stop=True)
